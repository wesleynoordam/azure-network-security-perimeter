variables:
- name: subscriptionId
  value: 'TODO'
- name: serviceConnectionName
  value: 'TODO'
- name: vnetResourcesContextPostfix
  value: 'TODO' # for example: -vnet-nsp-session
- name: nspResourcesContextPostfix
  value: 'TODO' # for example: -nsp-session

stages:
- stage:
  displayName: Demo
  jobs:
  - job: DeployDemo
    displayName: Deploy Demo environment
    steps:
    - task: DotNetCoreCLI@2
      displayName: Publish api zip
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
          $(Build.SourcesDirectory)/**/Sessions.Nsp.Api.csproj
          $(Build.SourcesDirectory)/**/Sessions.Vnet.Api.csproj
        arguments: -o $(build.artifactstagingdirectory) -c Release
        zipAfterPublish: true

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy bicep Nsp
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(serviceConnectionName)'
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'rg$(nspResourcesContextPostfix)'
        location: 'Sweden Central'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/Deployment/nsp-main.bicep'
        deploymentMode: 'Incremental'

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy bicep Vnet
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(serviceConnectionName)'
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'rg$(vnetResourcesContextPostfix)'
        location: 'Sweden Central'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/Deployment/vnet-main.bicep'
        deploymentMode: 'Incremental'
    
    - task: AzureRmWebAppDeployment@5
      displayName: Deploy Nsp API
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(serviceConnectionName)'
        appType: 'webAppLinux'
        WebAppName: 'app$(nspResourcesContextPostfix)'
        packageForLinux: '$(build.artifactstagingdirectory)/**/Sessions.Nsp.Api.zip'
        RuntimeStack: 'DOTNETCORE|8.0'
        StartupCommand: 'dotnet Sessions.Nsp.Api.dll'
        DeploymentTypeLinux: 'oneDeploy'
    
    - task: AzureRmWebAppDeployment@5
      displayName: Deploy Vnet API
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(serviceConnectionName)'
        appType: 'webAppLinux'
        WebAppName: 'app$(vnetResourcesContextPostfix)'
        packageForLinux: '$(build.artifactstagingdirectory)/**/Sessions.Vnet.Api.zip'
        RuntimeStack: 'DOTNETCORE|8.0'
        StartupCommand: 'dotnet Sessions.Vnet.Api.dll'
        DeploymentTypeLinux: 'oneDeploy'